apply plugin: 'com.tencent.bugly.tinker-support'

def bakPath = file("bakApk/")
/**
 * 此处填写每次构建生成的基准包目录
 */
def baseVersion = rootProject.ext.android.versionName + "." + Integer.toString(rootProject.ext.android.versionCode)
def variantName = "release"
def baseApkDir = "app-1110-14-04-50"
def hotfixEnable = true
/**
 * 对于插件各参数的详细解析请参考
 * http://tinkerpatch.com/Docs/SDK
 */
tinkerSupport {
    // 开启tinker-support插件，默认值true
    enable = hotfixEnable

    // 指定归档目录，默认值当前module的子目录tinker
    autoBackupApkDir = "${bakPath}/${baseVersion}"

    // 是否启用覆盖tinkerPatch配置功能，默认值false
    // 开启后tinkerPatch配置不生效，即无需添加tinkerPatch
    overrideTinkerPatchConfiguration = true

    def pathPrefix = "${bakPath}/${baseVersion}/${baseApkDir}"
    def name = "${project.name}-${variantName}" //-${baseVersion}

    // 编译补丁包时，必需指定基线版本的apk，默认值为空
    // 如果为空，则表示不是进行补丁包的编译
    // @{link tinkerPatch.oldApk }
    baseApk = "${pathPrefix}/${name}.apk"

    // 对应tinker插件applyMapping
    baseApkProguardMapping = "${pathPrefix}/${name}-mapping.txt"

    // 对应tinker插件applyResourceMapping
    baseApkResourceMapping = "${pathPrefix}/${name}-R.txt"

    // 构建基准包和补丁包都要指定不同的tinkerId，并且必须保证唯一性
    tinkerId = baseVersion

    // 构建多渠道补丁时使用
    // buildAllFlavorsDir = ""

    // 是否开启反射Application模式
    enableProxyApplication = false
}

/**
 * 一般来说,我们无需对下面的参数做任何的修改
 * 对于各参数的详细介绍请参考:
 * https://github.com/Tencent/tinker/wiki/Tinker-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97
 */
tinkerPatch {
    tinkerEnable = hotfixEnable
    ignoreWarning = false
    useSign = true
    dex {
        dexMode = "jar"
        pattern = ["classes*.dex"]
        loader = []
    }
    lib {
        pattern = ["lib/*/*.so"]
    }
    res {
        pattern = ["res/*", "r/*", "assets/*", "resources.arsc", "AndroidManifest.xml"]
        ignoreChange = []
        largeModSize = 100
    }
    packageConfig {
    }
    sevenZip {
        zipArtifact = "com.tencent.mm:SevenZip:1.1.10"
        //path = "/usr/local/bin/7za"
    }
    buildConfig {
        keepDexApply = false
        //tinkerId = "1.0.1-base"
        //applyMapping = "${bakPath}/${appName}/app-release-mapping.txt" //  可选，设置mapping文件，建议保持旧apk的proguard混淆方式
        //applyResourceMapping = "${bakPath}/${appName}/app-release-R.txt" // 可选，设置R.txt文件，通过旧apk文件保持ResId的分配
    }
}
